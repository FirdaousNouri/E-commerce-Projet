@model IEnumerable<ecommerce.Models.Produit>

@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
    try
    {
        ViewData["panier"] = Context.Request.Cookies["panier"].Split('-').ToList();
    }
    catch (Exception e)
    {
        ViewData["panier"] = new List<string>();
    }

}   <!-- ======= Hero Section ======= -->
<section id="hero" class="d-flex align-items-center">

    <div class="container-fluid" data-aos="fade-up">
        <div class="row justify-content-center">
            <div class="col-xl-5 col-lg-6 pt-3 pt-lg-0 order-2 order-lg-1 d-flex flex-column justify-content-center">
                <h1>Projet e-commerce </h1>
                <h2>
                    Nouri Firdaous
                    4IIR EMSI CENTRE
                </h2>
            </div>
            <div class="col-xl-4 col-lg-6 order-1 order-lg-2 hero-img" data-aos="zoom-in" data-aos-delay="150">
                <img src="~/assets/img/1.png" class="img-fluid animated" alt="">
            </div>
        </div>
    </div>

</section><!-- End Hero -->

<section id="portfolio" class="portfolio">
    <div class="container" data-aos="fade-up">

        <div class="section-title">
            <h2>Store</h2>
        </div>
     

        <div class="row">
            <div class="col-lg-12 d-flex justify-content-center">
                <ul id="portfolio-flters">
                    <li data-filter="*" class="filter-active">Tous</li>
                    <li data-filter=".filter-beauté">Beauté</li>
                    <li data-filter=".filter-vetement">Vetement Femme</li>
                    <li data-filter=".filter-chaussure">chaussure Femme</li>
                </ul>
            </div>
        </div>

        <div class="row portfolio-container">

            
            @foreach (var item in Model) {
            <div class="col-lg-4 col-md-6 portfolio-item filter-@item.Categorie"> 
                <div class="thumbnail-container">
                   
                        <img src="@item.PhotoUrl" class ="img-fluid" alt="">
                        <div class="product-image">
                            <br>
                            <h4 style="font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; font-size:14px">@Html.DisplayFor(modelItem => item.Description)</h4>
                            <div  class="product-price-and-shipping">
                                <p style="font-family:'Arial Rounded MT';color: darkorange"> @Html.DisplayFor(modelItem => item.Price) DH</p>
                            </div>
                        </div>
                            
                            <div class="portfolio-links">
                                <a href="@item.PhotoUrl" data-gallery="portfolioGallery" class="portfolio-lightbox" title="photo"> </a>
                            @if (((List<string>)ViewData["panier"]).Contains(item.id.ToString())){

                                    <button onClick = "ajouterPanier(this)" class="btn btn-outline-danger"><i class="bi bi-cart3"></i> Annuler du panier<input  type="hidden" value="@item.id"/></button>

                                    }
                            else{
                                <button onClick="ajouterPanier(this)" class="btn btn-outline-primary"><i class="bi bi-cart3"></i> Ajouter au panier<input  type="hidden" value="@item.id"/></button>
                            }
                         
                        </div>

                    </div>

                </div>
                


            }
            @*ajouter produit au panier*@
            <script>
                function ajouterPanier(e) {
                // Obtient la valeur du premier élément input dans l'élément fourni
                    var id = e.getElementsByTagName("input")[0].value; 
                // Initialise un tableau vide pour le panier  *
                    var panier = Array();
                //  S'il existe des cookies, divise le cookie 'panier' et le convertit en tableau
                       
                    if (document.cookie.length > "panier=".length)
                        panier = document.cookie.split('=')[1].split('-');
                  // Ajoute l'ID de l'article au tableau du panier 
                    

                    if (e.className.includes("primary")) { 
                        panier.push(id);
                        e.className = "btn btn-outline-danger";
                        e.innerHTML = e.innerHTML.replace("Ajouter au panier","Annuler du panier");
                    }
                    else {

                        panier.splice(panier.indexOf(id), 1);
                        e.className = "btn btn-outline-primary";
                        e.innerHTML = e.innerHTML.replace("Annuler du panier","Ajouter au panier");
                    }

                    console.log(panier);
                    document.getElementById("cart-count").innerHTML = panier.length;
                 // Convertit le tableau du panier en une chaîne séparée par des virgules
                    panier = panier.join('-');

                //Définitle cookie 'panier' avec la valeur mise à jour, ainsi qu'une date d'expiration et un chemin
                    document.cookie = `panier=${panier}; expires=Wed, 18 Dec 2030 12:00:00 UTC; path=/`;
                    
                }
                    </script>
           

        </div>

    </div>
</section>